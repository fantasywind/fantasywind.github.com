<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Fantasyatelier]]></title>
  <link href="http://fantasywind.github.com//atom.xml" rel="self"/>
  <link href="http://fantasywind.github.com/"/>
  <updated>2013-06-16T16:19:35.192Z</updated>
  <id>http://fantasywind.github.com//</id>
  <author>
    <name><![CDATA[Chai Yu Pai]]></name>
    <email><![CDATA[fantasyatelier@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[node程序管理器 PM2]]></title>
    <link href="http://fantasywind.github.com//2013/06/16/node程序管理器-pm2/"/>
    <id>http://fantasywind.github.com//2013/06/16/node程序管理器-pm2/</id>
    <published>2013-06-16T15:35:55.000Z</published>
    <updated>2013-06-16T15:59:48.000Z</updated>
    <content type="html"><![CDATA[<img src="https://raw.github.com/unitech/pm2/master/pres/pm2.png" title="[title PM2Logo]">


<p>PM2 是一個讓網管可以輕鬆管理多個程序的管理工具
過去我是透過 Ubuntu/Debian 的 Service 進行同主機多網站的管理，但是改用 PM2 統一包成單一副程序可以除了可以一次開關群組外，他也提供了良好的監控功能
另外為了快速部屬也提供了 JSON 匯入的實作</p>
<h2>安裝</h2>
<p>您可以透過<a href="https://npmjs.org/">npm</a>直接進行安裝</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>su<span class="operator"><span class="keyword">do</span> npm install -g pm2
</pre></td></tr></table></figure>


<h2>使用</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>pm2 start app<span class="variable">.js</span>    <span class="preprocessor"># 啟用一個新的 node 程序</span>
pm2 kill app<span class="variable">.js</span>     <span class="preprocessor"># 關閉受管理的程序</span>
pm2 list            <span class="preprocessor"># 檢視受管理的程序列表</span>
pm2 stop            <span class="preprocessor"># 停止所有受管理的程序</span>
pm2 monit [process] <span class="preprocessor"># 監視程序資源 </span>
</pre></td></tr></table></figure>


<h2>效果</h2>
<h3>pm2 list</h3>
<img src="https://github.com/unitech/pm2/raw/master/pres/pm2-list.png" title="[title pm2-list]">


<h3>pm2 monit</h3>
<img src="https://github.com/unitech/pm2/raw/master/pres/pm2-monit.png" title="[title pm2-monit]">


<h2>資源</h2>
<p><a href="https://github.com/Unitech/pm2">GitHub Page</a></p>
]]></content>
    <category scheme="http://fantasywind.github.com//tags/nodeJS/" term="nodeJS"/>
    <category scheme="http://fantasywind.github.com//categories/Server/" term="Server"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Angular Service, Provider, Factory]]></title>
    <link href="http://fantasywind.github.com//2013/06/16/angular-service-provider-factory/"/>
    <id>http://fantasywind.github.com//2013/06/16/angular-service-provider-factory/</id>
    <published>2013-06-16T10:23:24.000Z</published>
    <updated>2013-06-16T10:40:50.000Z</updated>
    <content type="html"><![CDATA[<h1>三種 Angular.Module 建構函式的差異</h1>
<h2>Service</h2>
<p>建構式中傳入的 this 可以任意給予 Property/Method
當 Controller 引用的時候會直接將這個 this scope 回傳使用，算是最基本的包裝</p>
<h2>Factory</h2>
<p>Controller 引用的時候會將建構式的回傳值物件 (Return Object) 包裝
在建構時可以不用擔心 this scope 的汙染問題</p>
<h2>Provider</h2>
<p>Getter 的概念
不同於 Service 回傳整個建構式的 this scope 只會回傳 this.$get 的內容
此外 this.$get 需為一個函式，於 Controller 引用的時候會即時 call function
可以透過私有函數的方法輕易弄成迭代器 (iterator)</p>
<p>網路上有人寫好的 Gist Example</p>
<script src="https://gist.github.com/3639232.js"></script>
]]></content>
    <category scheme="http://fantasywind.github.com//tags/Angular/" term="Angular"/>
    <category scheme="http://fantasywind.github.com//categories/WebDevelop/" term="WebDevelop"/>
  </entry>
</feed>
